#:kivy 1.4.1
#:set bgcolor (.06, .07, .08)
#:set bordercolor (.54, .59, .60)
#:set titlecolor (.34, .39, .40)
#:import KivyLexer kivy.extras.highlight.KivyLexer
#:import ContextMenu designer.uix.contextual.ContextMenu

#
# Helper for keeping a consistency accross the whole designer UI
#
# Rules:
# - rows height are 48sp
# - padding is 4sp
# - spacing is 4sp
# - button / label / widget are 40sp height
<DesignerButton@Button,DesignerLabel@Label>:
    size_hint_y: None
    height: '40sp'

<DesignerButtonFit@DesignerButton>
    size_hint_x: None
    width: self.texture_size[0] + sp(32)

<DesignerLabelFit@DesignerLabel>:
    text_size: self.width - sp(32), None

<DesignerListItemButton@ListItemButton>:
    size_hint: None, None
    size: self.texture_size[0] + sp(32), '40sp'
    selected_color: 1, 1, 1, 1
    deselected_color: .8, .8, .8, .5


#
# Dialogs
#

<HelpDialog>:
    orientation: 'vertical'
    rst: rst
    padding: '2sp'
    RstDocument:
        id: rst
    Button:
        text: 'Close'
        size_hint: None, None
        size: '44pt', '22pt'
        on_release: root.dispatch('on_cancel')

<AboutDialog>:
    Label:
        text: 'Kivy Designer'
        
    Button:
        text: 'Close'
        size_hint: None, None
        size: '44pt', '22pt'
        on_release: root.dispatch('on_cancel')


<MenuHeader>
    color: (1, 1, 1, 1) if self.state == 'normal' else (0, 0, 0, 1)
    font_size: '12dp'
    shorten: True
    text_size: self.size
    padding: '2dp', '2dp'
    background_normal: 'atlas://data/images/defaulttheme/action_item'
    background_disabled_normal: 'atlas://data/images/defaulttheme/action_item'
    background_down: 'atlas://data/images/defaulttheme/action_item_down' if self.color[3] == 1 else 'atlas://data/images/defaulttheme/action_item'
    background_disabled_down: 'atlas://data/images/defaulttheme/action_item_down'
    Image:
        source: 'atlas://data/images/defaulttheme/tree_closed'
        size: (20, 20) if root.show_arrow else (0,0)
        center_y: root.center_y
        x: (self.parent.right - self.width) if self.parent else 100

<ContextSubMenu>:
    arrow_image: 'atlas://data/images/defaulttheme/tree_closed'
    Image:
        source: root.arrow_image
        size: (20, 20) if root.attached_menu and len(root._list_children) > 0 else (0,0)
        y: self.parent.y + (self.parent.height/2) - (self.height/2)
        x: self.parent.x + (self.parent.width - self.width)

<MenuButton>:
    background_normal: 'atlas://data/images/defaulttheme/action_item'
    background_disabled_normal: 'atlas://data/images/defaulttheme/action_item'
    background_down: 'atlas://data/images/defaulttheme/action_item_down'
    background_disabled_down: 'atlas://data/images/defaulttheme/action_item_down'

<ContextMenu>:
    tab_pos: 'bottom_right'
    do_default_tab: False
    tab_height: '24sp'

<MenuBubble>:
    background_image: 'atlas://data/images/defaulttheme/action_item'

<DesignerLinkLabel>:
    color: 0, 0, 1, 1
    background_normal: 'atlas://data/images/defaulttheme/action_item'
    background_disabled_normal: 'atlas://data/images/defaulttheme/action_item_disabled'

<RecentFilesBox>:
    grid: grid
    cols: 1
    padding: '2sp'
    size_hint_x: None
    GridLayout:
        id: grid
        cols: 1
        size_hint_y: None
        height: 1

<DesignerStartPage>:
    cols: 1
    padding: '4sp'
    spacing: '4sp'
    btn_open: btn_open
    btn_new: btn_new
    recent_files_box: recent_files_box

    # XXX should not be needed
    Widget:
        size_hint: None, None
        height: '10sp'

    BoxLayout:
        size_hint: 1, None
        orientation: 'horizontal'
        height: btn_open.height
        padding: '4sp'
        spacing: '4sp'
        DesignerButtonFit:
            id: btn_open
            text: 'Open Project'
            on_release: root.dispatch('on_open_down')

        DesignerButtonFit:
            id: btn_new
            text: 'New Project'
            on_release: root.dispatch('on_new_down')

    DesignerLabelFit:
        text: 'Getting Started'
        bold: True

    GridLayout:
        kivy_label: kivy_label
        cols: 1
        size_hint_y: None
        height: self.minimum_height
        row_force_default: True
        row_default_height: '40sp'
        spacing: '4sp'
        padding: '16sp', '0sp'


        DesignerLinkLabel:
            id: kivy_label
            text: ' Kivy'
            text_size: self.width, None
            link: 'http://kivy.org'

        DesignerLinkLabel:
            text: ' Kivy Designer Help'
            size_hint_y: None
            text_size: self.width, None
            on_release: root.dispatch('on_help')

    DesignerLabelFit:
        text: 'Recent Projects'
        bold: True

    BoxLayout:
        orientation: 'horizontal'
        size_hint: None, 1
        Label:
            size_hint: None, 1
            width: 10

        RecentFilesBox:
            id: recent_files_box

<DesignerActionPrevious>:
    text_size: (self.width - sp(24), self.size[1])
    valign: 'middle'

<DesignerActionButton>:
    text_size: (self.width - sp(24), self.size[1])
    valign: 'middle'
    size_hint_y: None
    height: '40sp'

<DesignerActionSubMenu>:
    text_size: (self.width - sp(24), self.size[1])
    valign: 'middle'
    size_hint_y: None
    height: '40sp'

<InfoBubble>:
    size_hint: None, None
    width: '270dp'
    height: lbl.texture_size[1] + dp(20)
    on_touch_down: self.hide()
    BoxLayout:
        orientation: 'vertical'
        padding: '5dp'
        spacing: '2dp'
        Label:
            id: lbl
            text: root.message
            text_size: self.width, None

<Placeholder>:
    canvas:
        Color:
            rgb: 1, 0.5, 0.8
        
        Line:
            points: self.x - 2, self.y - 2, self.right - 2, self.y - 2, self.right - 2, self.top - 2, self.x - 2, self.top - 2
            width: 2.
            close: True

<PyScrollView>:
    id: scroll
    code_input: code_input
    PyCodeInput:
        id: code_input
        font_name: 'data/fonts/DroidSansMono.ttf'
        auto_indent: True
        size_hint_y: None
        height: max(scroll.height, self.minimum_height)

<AddFileDialog>:
    text_file: text_file
    text_folder: text_folder
    always_check: always_check
    orientation: 'vertical'

    Label:
        text: 'File:'
        size_hint_x: None
        width: '20pt'

    BoxLayout:
        size_hint_y: None
        height: 'DesignerActionButton24pt'
        TextInput:
            id: text_file
            multiline: False
            on_text: root.update_from_file()
        Button:
            size_hint_x: None
            text: 'Open File'
            on_press: root.open_file_btn_pressed()
            
    Label:
        text: 'Add File to:'
        size_hint_x: None
        width: '55pt'

    BoxLayout:
        size_hint_y: None
        height: '24pt'
        TextInput:
            id: text_folder
            multiline: False
        Button:
            size_hint_x: None
            text: 'Open Folder'
            on_press: root.open_folder_btn_pressed()

    BoxLayout:
        CheckBox:
            id: always_check
            width: '20sp'
            size_hint_x: None
        Label:
            width: '120pt'
            size_hint_x: None
            text: 'Always use this folder'

    BoxLayout:
        padding: '2sp'
        Button:
            text: 'Add'
            on_press: root._perform_add_file()
        Button:
            text: 'Cancel'
            on_press: root.dispatch('on_cancel')

<KVLangArea>:
    auto_indent: True
    font_name: 'data/fonts/DroidSansMono.ttf'
    lexer: KivyLexer()
    canvas.after:
        Color:
            rgba: .9, .1, .1, (1 if self.have_error else 0)
        Line:
            points: [self.x, self.y, self.right, self.y, self.right, self.top, self.x, self.top]
            close: True
            width: 2

<SelectClass>:
    select_button: select
    cancel_button: cancel
    orientation: 'vertical'
    padding: '2sp'
    
    GridLayout:
        rows: 1
        size_hint_y: None
        height: '25pt'
        padding: '4sp'
        Button:
            id: select
            text: 'Select Class'
            size_hint_x: None
            width: '90pt'
        Button:
            id: cancel
            text: 'Cancel'
            size_hint_x: None
            width: '90pt'

<NewProjectDialog>:
    image: image
    list_parent: list_parent
    select_button: select
    cancel_button: cancel
    orientation: 'vertical'
    padding: '2sp'

    Label:
        size_hint: None, None
        pos_hint: {'x': 0.1}
        height: '22pt'
        text: 'Select one of the following templates:'
    
    BoxLayout:
        id: list_parent
        orientation: 'horizontal'
        padding: '2sp'
        Image:
            id: image

    GridLayout:
        rows: 1
        size_hint_y: None
        height: '48sp'
        padding: '4sp'
        spacing: '4sp'
        DesignerButtonFit:
            id: select
            text: 'Create New Project'
        DesignerButtonFit:
            id: cancel
            text: 'Cancel'

<RecentDialog>:
    select_button: select
    cancel_button: cancel
    orientation: 'vertical'
    padding: '2sp'
    
    GridLayout:
        rows: 1
        size_hint_y: None
        height: '25pt'
        padding: '4sp'
        Button:
            id: select
            text: 'Open'
            size_hint_x: None
            width: '90pt'
        Button:
            id: cancel
            text: 'Cancel'
            size_hint_x: None
            width: '90pt'

<ConfirmationDialog>:
    orientation: 'vertical'
    padding: '5sp'
    Label:
        text: root.message
    
    BoxLayout:
        size_hint_y: None
        height: '25pt'
        Button:
            text: 'Yes'
            on_press: root.dispatch('on_ok')
        Button:
            text: 'No'
            on_press: root.dispatch('on_cancel')
    
<ActionCheckButton>:
    orientation: 'horizontal'
    background_normal: 'atlas://data/images/defaulttheme/action_item'
    canvas.before:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            pos: self.pos
            size: self.size
            source: self.background_normal

<EditContView>:
    ActionPrevious:
        title: "Edit"
        width: 100
        with_previous: True
    ActionOverflow:
    ActionButton:
        text: 'Undo'
        on_release: root.dispatch('on_undo')
    ActionButton:
        text: 'Redo'
        on_release: root.dispatch('on_redo')
    ActionButton:
        text: 'Cut'
        on_release: root.dispatch('on_cut')
    ActionButton:
        text: 'Copy'
        on_release: root.dispatch('on_copy')
    ActionButton:
        text: 'Paste'
        on_release: root.dispatch('on_paste')
    ActionButton:
        text: 'Select All'
        on_release: root.dispatch('on_selectall')
    ActionButton:
        text: 'Delete'
        on_release: root.dispatch('on_delete')

<Playground>:
    do_scale: True
    do_rotation: False
    size_hint: None, None
    size: 550, 350
    pos: 300, 230
    auto_bring_to_front: False
    canvas:
        Color:
            rgb: 1, 1, 1
        Line:
            points: [0, 0, self.width, 0, self.width, self.height, 0, self.height]
            width: 2.
            close: True

<PlaygroundDragElement>:
    size_hint: None, None
    size: 100, 100
    canvas:
        Color:
            rgb: (0.9, 0.9, 0.9) if self.can_place else (0.9, 0.1, 0.1)
        Line:
            points: [self.x, self.y, self.center_x - 20, self.y, self.center_x, self.y - 20, self.center_x + 20, self.y, self.right, self.y, self.right, self.top, self.x, self.top]
            close: True
            width: 2.

    on_target: app.focus_widget(args[1])

<Toolbox>:
    accordion: accordion
    Accordion:
        id: accordion
        orientation: 'vertical'
        pos: root.pos
        size_hint_y: None
        height: root.height

<ToolboxCategory>:
    gridlayout: gridlayout
    size_hint_y: None
    height: '22pt'
    title: self.title[0].upper() + self.title[1:]
    ScrollView:
        pos: root.pos
        GridLayout:
            id: gridlayout
            cols: 1
            orientation: 'vertical'
            padding: '5sp'
            spacing: '3sp'
            size_hint_y: None
            size: root.size
            height: max(self.parent.height, self.minimum_height)
    
<ToolboxButton>:
    size_hint_y: None
    height: '22pt'
    font_size: '10pt'
    on_press_and_touch: app.create_draggable_element(self.text, args[1])

<StatusBar>:
    app: app
    navbar: navbar
    gridlayout: gridlayout
    canvas:
        Color:
            rgb: bordercolor
        Rectangle:
            pos: self.x, self.top - 0.5
            size: self.width, 1
        Color:
            rgb: bgcolor
        Rectangle:
            pos: self.pos
            size: self.size

    GridLayout:
        id: gridlayout
        rows: 1
        GridLayout:
            rows: 1
            id: navbar

<StatusNavBarButton>:
    text: getattr(root.node, '__class__').__name__
    font_size: '10pt'
    width: self.texture_size[0] + 20
    size_hint_x: None
    on_release: app.focus_widget(root.node)

<StatusNavBarSeparator>:
    text: '>'
    font_size: '10pt'
    width: self.texture_size[0] + 20
    size_hint_x: None

<PropertyViewer>:
    do_scroll_x: False
    prop_list: prop_list

    canvas.before:
        Color:
            rgb: bgcolor
        Rectangle:
            pos: self.pos
            size: self.size

    GridLayout:
        id: prop_list
        cols: 2
        padding: 3
        size_hint_y: None
        height: self.minimum_height
        row_default_height: '25pt'

<PropertyLabel>:
    font_size: '10pt'
    valign: 'middle'
    size_hint_x: None
    width: '90sp'
    text_size: self.size
    halign: 'left'
    valign: 'middle'
    shorten: True

<PropertyBase>:
    propvalue: getattr(self.propwidget, self.propname)
    padding: '6pt', '6pt'

    canvas.after:
        Color:
            rgba: .9, .1, .1, (1 if self.have_error else 0)
        Line:
            points: [self.x, self.y, self.right, self.y, self.right, self.top, self.x, self.top]
            close: True
            width: 2

<PropertyTextInput>:
    border: 8, 8, 8, 8
    text: str(getattr(self.propwidget, self.propname))
    on_text: self.set_value(args[1])

<PropertyBoolean>:
    on_active: self.set_value(args[1])
    active: bool(getattr(self.propwidget, self.propname))

<PropertyOptions>:
    valign: 'middle'
    halign: 'left'
    on_text: self.set_value(args[1])

<WidgetsTree>:
    do_scroll_x: False
    tree: tree
    canvas.before:
        Color:
            rgb: bgcolor
        Rectangle:
            pos: root.pos
            size: root.size

    TreeView:
        id: tree
        height: self.minimum_height
        size_hint_y: None
        hide_root: True
        on_selected_node: args[1] and app.focus_widget(args[1].node)

<WidgetTreeElement>:
    is_open: True
    text: getattr(root.node, '__class__').__name__
    font_size: '10pt'

<UICreator>:
    kv_code_input: code_input
    splitter_kv_code_input: splitter_kv
    grid_widget_tree: grid_widget_tree
    splitter_property: splitter_property
    splitter_widget_tree: splitter_widget_tree
    propertyviewer: propertyviewer
    playground: playground
    adornment: adornment
    widgettree: widgettree
    error_console: error_console
    kivy_console: kivy_console
    tab_pannel: tab_pannel
    eventviewer: eventviewer
    py_console: py_console

    GridLayout:
        height: root.height
        pos: root.pos
        cols: 1
        splitter_widget_tree: splitter_widget_tree

        canvas.before:
            StencilPush
            Rectangle:
                pos: self.pos
                size: self.size
            StencilUse
        canvas.after:
            StencilUnUse
            Rectangle:
                pos: self.pos
                size: self.size
            StencilPop

        FloatLayout:
            size_hint: 1,1
            canvas:
                Color:
                    rgb: .21, .22, .22
                Rectangle:
                    pos: self.pos
                    size: self.size

            Playground:
                id: playground
                scale: 0.7
                canvas.before:
                    Color:
                        rgb: 0, 0, 0
                    Rectangle:
                        size: self.size
                on_show_edit: root.on_show_edit()

            FloatLayout:
                id: adornment
                size_hint: 1, 1

            Splitter:
                id: splitter_kv
                sizable_from: 'top'
                size_hint_y: None
                size_hint_x: None
                height: 200
                min_size: 150
                max_size: 500
                x: root.x
                width: root.width - splitter_widget_tree.width
                y: root.y
                canvas.before:
                    Color:
                        rgb: .21, .22, .22
                    
                    Rectangle:
                        size: splitter_kv.size
                        pos: splitter_kv.pos
                    
                
                DesignerTabbedPanel:
                    id: tab_pannel
                    do_default_tab: False
                    DesignerTabbedPanelItem:
                        text: 'KV Lang Area'
                        BoxLayout:
                            orientation: 'vertical'
                            ScrollView:
                                id: scroll
                                KVLangArea:
                                    id: code_input
                                    size_hint_y: None
                                    height: max(scroll.height, self.minimum_height)
                                    on_show_edit: root.on_show_edit()
                            
                            Button:
                                size_hint_y: None
                                size_hint_x: 0.1
                                height: '22pt'
                                text: 'Reload'
                                pos_hint: {'x': 0.9}
                                on_release: root.reload_btn_pressed()
                                
                    
                    DesignerTabbedPanelItem:
                        text: 'Kivy Console'
                        KivyConsole:
                            id: kivy_console
                    
                    DesignerTabbedPanelItem:
                        text: 'Python Shell'
                        PythonConsole:
                            id: py_console
        
                    DesignerTabbedPanelItem:
                        text: 'Error Console'
                        ScrollView:
                            id: e_scroll
                            CodeInput:
                                id: error_console
                                size_hint_y: None
                                height: max(e_scroll.height, self.minimum_height)
                                text: ''
                                    
   
            Splitter:
                id: splitter_widget_tree
                size_hint_x: None
                min_size: 170
                width: 250
                pos_hint: {'y': 0, 'right': 1}
                
                BoxLayout:
                    orientation: 'vertical'
                    
                    GridLayout:
                        id: grid_playground_settings
                        cols: 1
                        spacing: .5
                        height: self.minimum_height
                        size_hint_y: None
                        
                        canvas:
                            Color:
                                rgb: titlecolor
                            Rectangle:
                                pos: self.pos
                                size: self.size
                        
                        Label:
                            text: 'Playground Settings'
                            font_size: '10pt'
                            height: '20pt'
                            size_hint_y: None
                        
                        BoxLayout:
                            size_hint_y: None
                            height: sp(48)
                            
                            canvas.before:
                                Color:
                                    rgb: bgcolor
                                Rectangle:
                                    pos: self.pos
                                    size: self.size
                            
                            Label:
                                text: 'Size:'
                                size_hint_x: None
                                width: sp(52)
                            
                            PlaygroundSizeSelector:
                                playground: playground
                        
                        BoxLayout:
                            size_hint_y: None
                            height: sp(48)
                            
                            canvas.before:
                                Color:
                                    rgb: bgcolor
                                Rectangle:
                                    pos: self.pos
                                    size: self.size
                            
                            Label:
                                text: 'Zoom: %d%%' % (zoom_slider.value * 100)
                                size_hint_x: None
                                width: sp(96)
                            
                            Slider:
                                id: zoom_slider
                                min: 0.25
                                max: 1.5
                                step: 0.05
                                value: playground.scale
                                on_value: playground.scale = args[1]
                    
                    GridLayout:
                        cols: 1
                        spacing: .5
    
                        canvas:
                            Color:
                                rgb: titlecolor
                            Rectangle:
                                pos: self.pos
                                size: self.size
    
                        GridLayout:
                            id: grid_widget_tree
                            cols: 1
                            spacing: .5
                            Label:
                                text: 'Widget Navigator'
                                font_size: '10pt'
                                height: '20pt'
                                size_hint_y: None
    
                            WidgetsTree:
                                id: widgettree
                                playground: playground
    
                        Splitter:
                            id: splitter_property
                            sizable_from: 'top'
                            size_hint_y: None
                            height: 300
                            max_size: 500
                            DesignerTabbedPanel:
                                do_default_tab: False
                                DesignerTabbedPanelItem:
                                    text: '   Properties'
                                    PropertyViewer:
                                        id: propertyviewer
    
                                DesignerTabbedPanelItem:
                                    text: 'Events'
                                    EventViewer:
                                        id: eventviewer


<PlaygroundSizeSelector>:
    markup: True

<PlaygroundSizeView>:
    accordion: accordion
    
    BoxLayout:
        orientation: 'vertical'
        
        BoxLayout:
            size_hint_y: None
            height: sp(48)
            Label:
                text: 'Playground Size'
                bold: True
            
            Label:
                text: 'Portrait'
                halign: 'right'
                valign: 'middle'
                text_size: self.size
            Switch:
                size_hint_x: None
                width: sp(128)
                active: root.selected_orientation == 'portrait'
                on_active: root.selected_orientation = ('portrait' if self.active else 'landscape')
        
        Accordion:
            id: accordion


<DesignerContent>:
    ui_creator: ui_creator
    tree_view: tree_view
    tab_pannel: tab_panel
    toolbox: toolbox
    splitter_tree: splitter_tree
    tree_toolbox_tab_panel: tree_toolbox_tab_panel

    DesignerTabbedPanel:
        id: tab_panel
        size_hint: None, None
        height: root.height
        y: root.y
        x: splitter_tree.width
        width: root.width - splitter_tree.width
        do_default_tab: False

        DesignerTabbedPanelItem:
            text: 'UI Creator'
            UICreator:
                id: ui_creator

    Splitter:
        id: splitter_tree
        pos: root.pos
        size_hint_x: None
        sizable_from: 'right'
        min_size: 220
        width: 220
        DesignerTabbedPanel:
            id: tree_toolbox_tab_panel
            do_default_tab: False
            DesignerTabbedPanelItem:
                text: 'Project Tree'
                TreeView:
                    id: tree_view
                    size_hint: 1, 1
            
            DesignerTabbedPanelItem:
                text: 'Toolbox'
                Toolbox:
                    id: toolbox

<Designer>:
    statusbar: statusbar
    actionbar: actionbar
    start_page: start_page
    recent_files_cont_menu: recent_files_cont_menu

    ActionBar:
        id: actionbar
        pos_hint: {'top': 1}
        on_height: root.on_actionbar_height()
        ActionView:
            ActionPrevious:
                title: 'Kivy Designer'
                with_previous: False
            ActionOverflow:
            DesignerActionGroup:
                text: 'File'
                mode: 'spinner'
                dropdown_cls: ContextMenu
                DesignerActionButton:
                    text: 'New'
                    on_release: root.action_btn_new_pressed()
                DesignerActionButton:
                    text: 'Open'
                    on_release: root.action_btn_open_pressed()
                DesignerActionButton:
                    id: actn_btn_save
                    disabled: True
                    text: 'Save'
                    on_release: root.action_btn_save_pressed()
                DesignerActionButton:
                    id: actn_btn_save_as
                    disabled: True
                    text: 'Save As'
                    on_release: root.action_btn_save_as_pressed()
                DesignerActionSubMenu:
                    id: recent_files_cont_menu
                    text: 'Recent Files'
                    on_release: root.action_btn_recent_files_pressed()
                DesignerActionButton:
                    text: 'Settings'
                    on_release: root.action_btn_settings_pressed()
                DesignerActionButton:
                    text: 'Quit'
                    on_release: root.action_btn_quit_pressed()

            ActionGroup:
                text: 'View'
                mode: 'spinner'
                size_hint_x: None
                width: 90
                dropdown_cls: ContextMenu
                ActionCheckButton:
                    id: actn_chk_proj_tree
                    disabled: True
                    text: 'Project Tree and Toolbox'
                    minimum_width: 200
                    on_active: root.action_chk_btn_toolbox_active(self)

                ActionCheckButton:
                    id: actn_chk_prop_event
                    disabled: True
                    text: 'Properties and Events'
                    minimum_width: 200
                    on_active: root.action_chk_btn_property_viewer_active(self)

                ActionCheckButton:
                    id: actn_chk_widget_tree
                    disabled: True
                    text: 'Widget Tree'
                    minimum_width: 200
                    on_active: root.action_chk_btn_widget_tree_active(self)

                ActionCheckButton:
                    id: actn_chk_status_bar
                    disabled: True
                    text: 'StatusBar'
                    minimum_width: 200
                    on_active: root.action_chk_btn_status_bar_active(self)

                ActionCheckButton:
                    id: actn_chk_kv_lang_area
                    disabled: True
                    text: 'KV Lang Area'
                    minimum_width: 200
                    on_active: root.action_chk_btn_kv_area_active(self)

            ActionGroup:
                text: 'Project'
                mode: 'spinner'
                size_hint_x: None
                width: 90
                dropdown_cls: ContextMenu
                DesignerActionButton:
                    id: actn_btn_add_file
                    disabled: True
                    text: 'Add File'
                    minimum_width: 150
                    on_press: root.action_btn_add_file_pressed()
                
                DesignerActionButton:
                    id: actn_btn_custom_widget
                    disabled: True
                    text: 'Add Custom Widget'
                    on_press: root.action_btn_add_custom_widget_press()
            
                DesignerActionButton:
                    id: actn_btn_proj_pref
                    disabled: True
                    text: 'Project Preferences'
                    minimum_width: 150
                    on_press: root.action_btn_project_pref_pressed()

            ActionGroup:
                text: 'Run'
                mode: 'spinner'
                size_hint_x: None
                width: 90
                dropdown_cls: ContextMenu
                DesignerActionButton:
                    id: actn_btn_run_proj
                    disabled: True
                    text: 'Run Project'
                    minimum_width: 150
                    on_release: root.action_btn_run_project_pressed()
            
            ActionGroup:
                text: 'Help'
                mode: 'spinner'
                size_hint_x: None
                width: 90
                dropdown_cls: ContextMenu
                DesignerActionButton:
                    id: actn_btn_help
                    text: 'Kivy Designer Help'
                    minimum_width: 150
                    on_release: root.show_help()
                
                DesignerActionButton:
                    id: actn_btn_about
                    text: 'About Kivy Designer'
                    minimum_width: 150
                    on_release: root.action_btn_about_pressed()

    DesignerStartPage:
        id: start_page
        size_hint_y: None
        height: root.height - actionbar.height - statusbar.height
        top: root.height - actionbar.height
        on_open_down: root.action_btn_open_pressed()
        on_new_down: root.action_btn_new_pressed()
        on_help: root.show_help()

    StatusBar:
        id: statusbar
        size_hint_y: None
        on_height: root.on_statusbar_height()
        height: '20pt'
        pos_hint: {'y': 0}

<Adorner>:
    # Corners
    BoxLayout:
        id: bottom_left
        size_hint: None, None
        size: root.button_size
        top: 0
        right: 0
    
    BoxLayout:
        id: bottom_right
        size_hint: None, None
        size: root.button_size
        top: 0
        x: root.width
    
    BoxLayout:
        id: top_left
        size_hint: None, None
        size: root.button_size
        y: root.height
        right: 0
    
    BoxLayout:
        id: top_right
        size_hint: None, None
        size: root.button_size
        y: root.height
        x: root.width
    
    # Sides
    FloatLayout:
        size_hint: None, None
        size: (root.width, root.button_width)
        top: 0
        x: 0
        StackLayout:
            id: bottom
            orientation: 'rl-tb'
            padding: root.handle_width, 0
            size_hint: None, 1
            width: self.minimum_width
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    
    FloatLayout:
        size_hint: None, None
        size: (root.width, root.button_width)
        y: root.height
        x: 0
        StackLayout:
            id: top
            orientation: 'lr-tb'
            padding: root.handle_width, 0
            size_hint: None, 1
            width: self.minimum_width
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    
    FloatLayout:
        size_hint: None, None
        size: (root.button_width, root.height)
        y: 0
        right: 0
        StackLayout:
            id: left
            orientation: 'tb-lr'
            padding: 0, root.handle_width
            size_hint: 1, None
            height: self.minimum_height
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    
    FloatLayout:
        size_hint: None, None
        size: (root.button_width, root.height)
        y: 0
        x: root.width
        StackLayout:
            id: right
            orientation: 'bt-rl'
            padding: 0, root.handle_width
            size_hint: 1, None
            height: self.minimum_height
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    
    FloatLayout:
        id: center
        size_hint: None, None
        size: root.size
        pos: 0, 0
        canvas:
            Color:
                rgba: root.border_color
            Line:
                points: 0, 0, self.width, 0, self.width, self.height, 0, self.height
                close: True
                width: root.border_width
    
<AdornerButton>:
    size_hint: None, None
    opacity: 0 if self.disabled else (1 if self.hover else 0.25)

<Handle>:
    size_hint: None, None
    size: 12, 12
    canvas:
        Color:
            rgba: root.color
        Rectangle:
            pos: self.pos
            size: self.size

